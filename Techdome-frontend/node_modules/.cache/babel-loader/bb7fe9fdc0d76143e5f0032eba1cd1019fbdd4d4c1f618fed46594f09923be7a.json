{"ast":null,"code":"import { ADD_BLOG, BLOG_REQUEST, BLOG_SUCCESS, ADD_NEW_BLOG, DEL_BLOG, UPDATE_NEW_BLOG } from \"../constants/blogConstants\";\nimport axios from \"axios\";\nimport axiosNew from \"../apiConfig/api\";\nconst uploadData = async (data, dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Conetnt-Type\": \"application/json\"\n      }\n    };\n    const res = await axiosNew.post(\"/add_blog\", data, config);\n    dispatch({\n      type: ADD_NEW_BLOG,\n      payload: res.data.blog\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst updateData = async (data, dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Conetnt-Type\": \"application/json\"\n      }\n    };\n    const res = await axiosNew.post(\"/update_blog\", data, config);\n    dispatch({\n      type: UPDATE_NEW_BLOG,\n      payload: res.data.newBlog\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addBlog = blogData => async dispatch => {\n  try {\n    dispatch({\n      type: BLOG_REQUEST\n    });\n    const data = new FormData();\n    data.append(\"file\", blogData.img);\n    data.append(\"upload_preset\", \"myappintern\");\n    axios.post(\"https://api.cloudinary.com/v1_1/dplwvxqum/image/upload\", data).then(_ref => {\n      let {\n        data\n      } = _ref;\n      uploadData({\n        ...blogData,\n        img: data.url,\n        public_id: data.public_id\n      }, dispatch);\n    }).catch(err => console.log(err));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteBlog = blogData => async dispatch => {\n  try {\n    dispatch({\n      type: DEL_BLOG,\n      payload: blogData._id\n    });\n    const config = {\n      headers: {\n        \"Conetnt-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axiosNew.post(\"/delete_blog\", blogData, config);\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateBlog = blogData => async dispatch => {\n  try {\n    dispatch({\n      type: BLOG_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Conetnt-Type\": \"application/json\"\n      }\n    };\n    if (blogData.imgChange) {\n      const del_id = blogData.public_id;\n      const data = new FormData();\n      data.append(\"file\", blogData.img);\n      data.append(\"upload_preset\", \"myappintern\");\n      axios.post(\"https://api.cloudinary.com/v1_1/dplwvxqum/image/upload\", data).then(_ref2 => {\n        let {\n          data\n        } = _ref2;\n        updateData({\n          ...blogData,\n          img: data.url,\n          public_id: data.public_id,\n          del_id\n        }, dispatch);\n      }).catch(err => console.log(err));\n    } else {\n      const {\n        data\n      } = await axiosNew.post(\"/update_blog\", blogData, config);\n      console.log(data.newBlog);\n      dispatch({\n        type: UPDATE_NEW_BLOG,\n        payload: data.newBlog\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getBlogs = () => async dispatch => {\n  try {\n    dispatch({\n      type: BLOG_REQUEST\n    });\n    const {\n      data\n    } = await axiosNew.get(\"/get_blog\");\n    dispatch({\n      type: BLOG_SUCCESS,\n      payload: data.blogs\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["ADD_BLOG","BLOG_REQUEST","BLOG_SUCCESS","ADD_NEW_BLOG","DEL_BLOG","UPDATE_NEW_BLOG","axios","axiosNew","uploadData","data","dispatch","config","headers","res","post","type","payload","blog","error","console","log","updateData","newBlog","addBlog","blogData","FormData","append","img","then","_ref","url","public_id","catch","err","deleteBlog","_id","updateBlog","imgChange","del_id","_ref2","getBlogs","get","blogs"],"sources":["/root/React-app/Techdome-frontend/src/actions/blogAction.js"],"sourcesContent":["import { ADD_BLOG, BLOG_REQUEST, BLOG_SUCCESS, ADD_NEW_BLOG, DEL_BLOG, UPDATE_NEW_BLOG } from \"../constants/blogConstants\";\nimport axios from \"axios\";\nimport axiosNew from \"../apiConfig/api\";\n\n\n\nconst uploadData = async (data, dispatch) => {\n    try {\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n        const res = await axiosNew.post(\"/add_blog\", data, config);\n        dispatch({ type: ADD_NEW_BLOG, payload: res.data.blog });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nconst updateData = async (data, dispatch) => {\n    try {\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n        const res = await axiosNew.post(\"/update_blog\", data, config);\n        dispatch({ type: UPDATE_NEW_BLOG, payload: res.data.newBlog });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nexport const addBlog = (blogData) => async (dispatch) => {\n    try {\n        dispatch({ type: BLOG_REQUEST });\n        const data = new FormData();\n        data.append(\"file\", blogData.img);\n        data.append(\"upload_preset\", \"myappintern\");\n        axios.post(\"https://api.cloudinary.com/v1_1/dplwvxqum/image/upload\", data).then(({ data }) => {\n            uploadData({ ...blogData, img: data.url, public_id: data.public_id }, dispatch);\n        }).catch((err) => console.log(err));\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deleteBlog = (blogData) => async (dispatch) => {\n    try {\n        dispatch({ type: DEL_BLOG, payload: blogData._id });\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n        const { data } = await axiosNew.post(\"/delete_blog\", blogData, config);\n        console.log(data);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updateBlog = (blogData) => async (dispatch) => {\n    try {\n        dispatch({ type: BLOG_REQUEST });\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n\n        if (blogData.imgChange) {\n\n            const del_id = blogData.public_id;\n\n            const data = new FormData();\n            data.append(\"file\", blogData.img);\n            data.append(\"upload_preset\", \"myappintern\");\n            axios.post(\"https://api.cloudinary.com/v1_1/dplwvxqum/image/upload\", data).then(({ data }) => {\n                updateData({ ...blogData, img: data.url, public_id: data.public_id, del_id }, dispatch);\n            }).catch((err) => console.log(err));\n\n        } else {\n            const { data } = await axiosNew.post(\"/update_blog\", blogData, config);\n            console.log(data.newBlog);\n            dispatch({ type: UPDATE_NEW_BLOG, payload: data.newBlog });\n        }\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\nexport const getBlogs = () => async (dispatch) => {\n    try {\n        dispatch({ type: BLOG_REQUEST });\n        const { data } = await axiosNew.get(\"/get_blog\");\n        dispatch({ type: BLOG_SUCCESS, payload: data.blogs });\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}