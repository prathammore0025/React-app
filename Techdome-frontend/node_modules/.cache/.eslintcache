[{"/root/Techdome-frontend/src/index.js":"1","/root/Techdome-frontend/src/store.js":"2","/root/Techdome-frontend/src/App.js":"3","/root/Techdome-frontend/src/reducer/rootReducer.js":"4","/root/Techdome-frontend/src/actions/userAction.js":"5","/root/Techdome-frontend/src/pages/login/Login.jsx":"6","/root/Techdome-frontend/src/pages/signup/Signup.jsx":"7","/root/Techdome-frontend/src/pages/form/Form.jsx":"8","/root/Techdome-frontend/src/pages/blog/Blog.jsx":"9","/root/Techdome-frontend/src/reducer/blogReducer.js":"10","/root/Techdome-frontend/src/reducer/userReducer.js":"11","/root/Techdome-frontend/src/constants/userConstants.js":"12","/root/Techdome-frontend/src/apiConfig/api.js":"13","/root/Techdome-frontend/src/actions/blogAction.js":"14","/root/Techdome-frontend/src/components/blogCard/BlogCard.jsx":"15","/root/Techdome-frontend/src/components/navbar/NavBar.jsx":"16","/root/Techdome-frontend/src/constants/blogConstants.js":"17"},{"size":414,"mtime":1727612435877,"results":"18","hashOfConfig":"19"},{"size":396,"mtime":1727612435877,"results":"20","hashOfConfig":"19"},{"size":754,"mtime":1727612435874,"results":"21","hashOfConfig":"19"},{"size":242,"mtime":1727612435877,"results":"22","hashOfConfig":"19"},{"size":1996,"mtime":1727612435874,"results":"23","hashOfConfig":"19"},{"size":3320,"mtime":1727612435877,"results":"24","hashOfConfig":"19"},{"size":3771,"mtime":1727612435877,"results":"25","hashOfConfig":"19"},{"size":6711,"mtime":1727612435877,"results":"26","hashOfConfig":"19"},{"size":3120,"mtime":1727612435877,"results":"27","hashOfConfig":"19"},{"size":1402,"mtime":1727612435877,"results":"28","hashOfConfig":"19"},{"size":976,"mtime":1727612435877,"results":"29","hashOfConfig":"19"},{"size":268,"mtime":1727612435877,"results":"30","hashOfConfig":"19"},{"size":164,"mtime":1727612435874,"results":"31","hashOfConfig":"19"},{"size":3026,"mtime":1727612435874,"results":"32","hashOfConfig":"19"},{"size":631,"mtime":1727612435876,"results":"33","hashOfConfig":"19"},{"size":3058,"mtime":1727612435876,"results":"34","hashOfConfig":"19"},{"size":217,"mtime":1727612435877,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eeikp5",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/root/Techdome-frontend/src/index.js",[],[],"/root/Techdome-frontend/src/store.js",[],[],"/root/Techdome-frontend/src/App.js",["96"],[],"import React from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport Login from './pages/login/Login'\nimport Signup from './pages/signup/Signup'\nimport Blog from './pages/blog/Blog'\nimport Form from './pages/form/Form'\nimport { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { loadUser } from './actions/userAction'\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadUser());\n  }, []);\n\n  return (\n    <>\n      <Routes>\n        <Route path='/form' element={<Form />} />\n        <Route path='/' element={<Blog />} />\n        <Route path='/login' element={<Login />} />\n        <Route path='/signup' element={<Signup />} />\n      </Routes>\n    </>\n  )\n}\n\nexport default App","/root/Techdome-frontend/src/reducer/rootReducer.js",[],[],"/root/Techdome-frontend/src/actions/userAction.js",["97","98","99","100","101"],[],"import { LOGIN_SUCCESS, LOGIN_REQUEST, LOAD_REQUEST, LOAD_SUCCESS, LOAD_FAIL, LOGOUT_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"../apiConfig/api\";\n\nexport const registeruser = (userData, navigate, fun) => async () => {\n    try {\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n        const res = await axios.post(\"/register\", userData, config);\n        if (res.status == 201) {\n            navigate(\"/login\");\n        } else {\n            window.alert(\"somthing went wrong\");\n        }\n\n        fun(null);\n\n    } catch (error) {\n        fun(error.response.data.message)\n        console.log(error);\n    }\n}\n\nexport const loginUser = (userData, fun) => async (dispatch) => {\n    try {\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n        const res = await axios.post(\"/login\", userData, config);\n        if (res.status == 200) {\n            localStorage.setItem(\"userToken\", res.data.token);\n            dispatch({ type: LOGIN_SUCCESS, payload: res.data.user });\n        } else {\n            window.alert(\"somthing went wrong\");\n        }\n\n        fun(null);\n\n    } catch (error) {\n        fun(error.response.data.message);\n        console.log(error);\n    }\n}\n\nexport const loadUser = () => async (dispatch) => {\n    try {\n        const token = localStorage.getItem(\"userToken\");\n        if (token) {\n            const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n            const res = await axios.post(\"/get_user_data\", { token }, config);\n            dispatch({ type: LOAD_SUCCESS, payload: res.data.user });\n        } else {\n            console.log(\"token is not present..!\");\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const logoutUser = (navigate) => async (dispatch) => {\n    try {\n        localStorage.removeItem(\"userToken\");\n        dispatch({ type: LOGOUT_SUCCESS });\n        navigate(\"/login\");\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n","/root/Techdome-frontend/src/pages/login/Login.jsx",["102"],[],"import React, { useEffect, useState } from 'react'\nimport \"./login.scss\"\nimport NavBar from '../../components/navbar/NavBar'\nimport { Button } from '@mui/material'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loginUser } from '../../actions/userAction'\nimport { useNavigate } from 'react-router-dom'\nimport { Bars } from 'react-loader-spinner'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Login = () => {\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [loader, setLoader] = useState(false);\n\n    const [userData, setuserData] = useState({\n        email: \"\",\n        password: \"\"\n    });\n\n    const handleChange = (e) => {\n        setuserData({ ...userData, [e.target.name]: e.target.value });\n    }\n\n    //////////--------- for toast ---------/////////////////////\n    const fun = (error) => {\n        if (error) {\n            toast.error(`ERROR: ${error} !`, { theme: \"dark\", autoClose: 2000 });\n        }\n        setLoader(false);\n    }\n\n    const login = () => {\n        if (userData.email && userData.password) {\n            setLoader(true);\n            dispatch(loginUser(userData, fun));\n        } else {\n            toast.warning(\"WARNING: All fields required !\", { theme: \"dark\", autoClose: 2000 });\n        }\n    }\n\n    const { isAuthenticated } = useSelector(state => state.user)\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"userToken\");\n        if (token) {\n            navigate(\"/\");\n        }\n    }, [isAuthenticated]);\n\n\n\n    return (\n        <>\n\n            {/* //////////////////////////////////////////////////// */}\n            <ToastContainer />\n            {/* //////////////////////////////////////////////////// */}\n\n\n            <div className='login'>\n                <NavBar />\n\n                {loader && <div className='loginLoader'>\n                    <Bars\n                        height=\"80\"\n                        width=\"80\"\n                        color=\"#fff\"\n                        ariaLabel=\"bars-loading\"\n                        wrapperStyle={{}}\n                        wrapperClass=\"\"\n                        visible={true}\n                    />\n                </div>}\n\n\n                <div className='inner'>\n                    <div className='signupForm'>\n\n\n                        <div className='form_group'>\n                            <div><Button className='but' variant='contained'>Email</Button></div>\n                            <input type=\"email\" name=\"email\" value={userData.email} id=\"\" placeholder='Enter your email' onChange={handleChange} />\n                        </div>\n\n                        <div className='form_group'>\n                            <div><Button className='but' variant='contained'>Password</Button></div>\n                            <input type=\"text\" name=\"password\" value={userData.password} id=\"\" placeholder='Enter your password' onChange={handleChange} />\n                        </div>\n\n                        <div className='btnBox'>\n                            <Button variant='contained' onClick={login} className='subBt'>Login</Button>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default Login","/root/Techdome-frontend/src/pages/signup/Signup.jsx",["103"],[],"import React, { useEffect, useState } from 'react'\nimport \"./signup.scss\"\nimport NavBar from '../../components/navbar/NavBar'\nimport { Button } from '@mui/material'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { registeruser } from '../../actions/userAction'\nimport { useNavigate } from 'react-router-dom'\nimport { Bars } from 'react-loader-spinner'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Signup = () => {\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [loader, setLoader] = useState(false);\n\n    const [userData, setuserData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    });\n\n    const handleChange = (e) => {\n        setuserData({ ...userData, [e.target.name]: e.target.value });\n    }\n\n    /////////////----------- for toast ---------////////////////\n    const fun = (error) => {\n        if (error) {\n            toast.error(`ERROR: ${error} !`, { theme: \"dark\", autoClose: 2000 });\n        }\n        setLoader(false);\n    }\n\n    const register = () => {\n        if (userData.name && userData.email && userData.password) {\n            setLoader(true);\n            dispatch(registeruser(userData, navigate, fun));\n        } else {\n            toast.warning(\"WARNING: All fields required !\", { theme: \"dark\", autoClose: 2000 });\n        }\n    }\n\n\n    const { isAuthenticated } = useSelector(state => state.user)\n    useEffect(() => {\n        const token = localStorage.getItem(\"userToken\");\n        if (token) {\n            navigate(\"/\");\n        }\n    }, [isAuthenticated]);\n\n\n    return (\n        <>\n\n            {/* //////////////////////////////////////////////////// */}\n            <ToastContainer />\n            {/* //////////////////////////////////////////////////// */}\n\n\n            <div className='signup'>\n                <NavBar />\n\n                {loader && <div className='signupLoader'>\n                    <Bars\n                        height=\"80\"\n                        width=\"80\"\n                        color=\"#fff\"\n                        ariaLabel=\"bars-loading\"\n                        wrapperStyle={{}}\n                        wrapperClass=\"\"\n                        visible={true}\n                    />\n                </div>}\n\n                <div className='inner'>\n                    <div className='signupForm'>\n\n                        <div className='form_group' style={{ marginTop: \"0px\" }}>\n                            <div><Button className='but' variant='contained'>Name</Button></div>\n                            <input type=\"text\" name=\"name\" value={userData.name} style={{ textTransform: \"capitalize\" }} placeholder='Enter your name' onChange={handleChange} />\n                        </div>\n\n                        <div className='form_group'>\n                            <div><Button className='but' variant='contained'>Email</Button></div>\n                            <input type=\"email\" name=\"email\" value={userData.email} id=\"\" placeholder='Enter your email' onChange={handleChange} />\n                        </div>\n\n                        <div className='form_group'>\n                            <div><Button className='but' variant='contained'>Password</Button></div>\n                            <input type=\"text\" name=\"password\" value={userData.password} id=\"\" placeholder='Enter your password' onChange={handleChange} />\n                        </div>\n\n                        <div className='btnBox'>\n                            <Button variant='contained' className='subBt' onClick={register} >Sign up</Button>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default Signup","/root/Techdome-frontend/src/pages/form/Form.jsx",["104","105","106","107"],[],"import React, { useEffect, useState } from 'react'\nimport \"./form.scss\"\nimport NavBar from '../../components/navbar/NavBar'\nimport { Button } from '@mui/material'\nimport img from \"../../assests/img2.png\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { addBlog, deleteBlog, getBlogs, updateBlog } from '../../actions/blogAction'\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { Bars } from \"react-loader-spinner\"\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst Form = () => {\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, user } = useSelector(state => state.user);\n    useEffect(() => {\n        const token = localStorage.getItem(\"userToken\");\n        if (!token) {\n            navigate(\"/login\");\n        }\n    }, [isAuthenticated]);\n\n\n    //////////////////---------- ADD blog ----//////////////////////////////\n\n    const [blog, setBlog] = useState({\n        title: \"\",\n        img: \"\",\n        description: \"\",\n        user_id: \"\"\n    });\n\n    useEffect(() => {\n        if (user) {\n            setBlog({ ...blog, \"user_id\": user._id });\n        }\n    }, [user]);\n\n    const handleChange = (e) => {\n        setBlog({ ...blog, [e.target.name]: e.target.value });\n    }\n\n    const handleImageChange = (e) => {\n        setBlog({ ...blog, \"img\": e.target.files[0] });\n    }\n\n    const submit = () => {\n        if (blog.img && blog.description && blog.title) {\n            dispatch(addBlog(blog));\n        } else {\n            toast.warning(\"WARNING: All fields required !\", { theme: \"colored\", autoClose: 2000 });\n        }\n    }\n\n\n    /////////////------ get blogs ------/////////\n    const [blogArray, setBlogArray] = useState([]);\n    const { isloading, blogs } = useSelector(state => state.blogReducer);\n\n    useEffect(() => {\n        dispatch(getBlogs());\n    }, []);\n\n    useEffect(() => {\n        if (blogs) {\n            setBlogArray(blogs);\n        }\n    }, [blogs]);\n\n\n    ////////////--------- delete blog --------//////////////////\n    const delBlog = (blog_data) => {\n        dispatch(deleteBlog({ public_id: blog_data.public_id, _id: blog_data._id }))\n    }\n\n\n    ////////////------- update blog ----------//////////////////////\n    const [open, setOpen] = useState(false);\n\n    const [updateValue, setUpdateValue] = useState({\n        title: \"\",\n        description: \"\",\n        img: \"\"\n    });\n\n    const handleUpdate = (e) => {\n        setUpdateValue({ ...updateValue, [e.target.name]: e.target.value });\n    }\n\n    const handleUpdateImage = (e) => {\n        setUpdateValue({ ...updateValue, \"img\": e.target.files[0], imgChange: true });\n    }\n\n    const submitUpdate = () => {\n        dispatch(updateBlog(updateValue));\n        setOpen(false);\n    }\n\n\n    return (\n        <>\n            <div className='form'>\n                <NavBar />\n\n\n                {/* //////////////////////////////////////////////////// */}\n                <ToastContainer />\n                {/* //////////////////////////////////////////////////// */}\n\n\n\n                {open ? <div className='updateForm'>\n                    <div className='formInner'>\n                        <label>Title\n                            <Button className='icon' onClick={() => setOpen(false)}><ClearIcon /></Button>\n                        </label>\n                        <input className='form-control' name='title' value={updateValue.title} type=\"text\" onChange={handleUpdate} />\n                        <label>Description</label>\n                        <input className='form-control' name='description' value={updateValue.description} type=\"text\" onChange={handleUpdate} />\n                        <label>Image</label>\n                        <input className='form-control' type=\"file\" onChange={handleUpdateImage} />\n                        <Button variant='contained' onClick={submitUpdate}>update</Button>\n                    </div>\n                </div> : null}\n\n\n\n                <div className='inner'>\n\n                    <div className='formCon'>\n\n                        <div className='addTableHead'>\n                            <label>Blog Title</label>\n                            <label>Blog Description</label>\n                            <label>Select Image</label>\n                            <label>Submit Button</label>\n                        </div>\n\n                        <div className='addTableHead'>\n                            <div><input type=\"text\" name=\"title\" value={blog.title} className=\"form-control\" placeholder=\"Enter blog title...\" onChange={handleChange} /></div>\n                            <div><input type=\"text\" name=\"description\" value={blog.description} className=\"form-control\" placeholder=\"Enter blog description...\" onChange={handleChange} /></div>\n                            <div><input type=\"file\" className=\"form-control-file\" onChange={handleImageChange} /></div>\n                            <div><Button variant='contained' onClick={submit}>Add Blog</Button></div>\n                        </div>\n\n                    </div>\n\n\n                    <div className='Blogtable'>\n\n                        {isloading ? <div className='loaderBlog'>\n                            <Bars\n                                height=\"80\"\n                                width=\"80\"\n                                color=\"#fff\"\n                                ariaLabel=\"bars-loading\"\n                                wrapperStyle={{}}\n                                wrapperClass=\"\"\n                                visible={true}\n                            />\n                        </div> : null}\n\n                        {blogArray.map((val, index) => {\n                            return (\n                                <div className='blogDataBox' key={index}>\n                                    <div className='serial'> {index + 1} </div>\n                                    <section> {val.title} </section>\n                                    <div><img src={val.img} alt=\"\" /></div>\n                                    <div>\n                                        <Button className='bt1' variant='contained' onClick={() => { setOpen(true); setUpdateValue({ ...val, imgChange: false }) }}>update</Button>\n                                        <Button className='bt2' variant='contained' onClick={() => delBlog(val)}>delete</Button>\n                                    </div>\n                                </div>\n                            );\n                        })}\n\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default Form","/root/Techdome-frontend/src/pages/blog/Blog.jsx",["108","109"],[],"import React, { useEffect, useState } from 'react'\nimport \"./blog.scss\"\nimport NavBar from '../../components/navbar/NavBar'\nimport img from \"../../assests/img1.png\"\nimport BlogCard from '../../components/blogCard/BlogCard'\n\nimport ArrowCircleLeftIcon from '@mui/icons-material/ArrowCircleLeft';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBlogs } from '../../actions/blogAction'\nimport { ThreeCircles } from 'react-loader-spinner'\n\n\nconst Blog = () => {\n\n    const { isloading, blogs } = useSelector(state => state.blogReducer);\n    const dispatch = useDispatch();\n\n    const [blogArray, setBlogArray] = useState([]);\n\n    const [blogData, setBlogData] = useState({\n        title: \"\",\n        description: \"\",\n        img: \"\"\n    });\n\n\n    useEffect(() => {\n        dispatch(getBlogs());\n    }, []);\n\n    useEffect(() => {\n        if (blogs) {\n            setBlogArray(blogs);\n            setBlogData({ title: blogs[0]?.title, description: blogs[0]?.description, img: blogs[0]?.img })\n        }\n    }, [blogs]);\n\n\n    const setBlog = (data) => {\n        setBlogData({ title: data.title, description: data.description, img: data.img })\n    }\n\n\n\n    return (\n        <>\n            <div className='blogPage'>\n                <NavBar />\n\n                {isloading ? <div className='loader_blog'>\n                    <ThreeCircles\n                        height=\"100\"\n                        width=\"100\"\n                        color=\"#fff\"\n                        wrapperStyle={{}}\n                        wrapperClass=\"\"\n                        visible={true}\n                        ariaLabel=\"three-circles-rotating\"\n                        outerCircleColor=\"\"\n                        innerCircleColor=\"\"\n                        middleCircleColor=\"\"\n                    />\n                </div> : null}\n\n\n                <div className='inner'>\n                    <div className='imageCon' style={{ background: `url(${blogData.img})`, backgroundSize: \"cover\" }}>\n                        <div>\n                            <section> {blogData.title} </section>\n                        </div>\n                    </div>\n\n                    <div className='title'>Description : </div>\n\n                    <div className='Description'>\n                        {blogData.description}\n                    </div>\n\n                    <div className='bottomHeader'>\n                        Short Reads\n                        <ArrowCircleLeftIcon className='rightArrow' style={{ fontSize: \"30px\" }} />\n                        <ArrowCircleRightIcon className='leftArrow' style={{ fontSize: \"30px\" }} />\n                    </div>\n\n                    <div className='blogCardCon'>\n\n                        {blogArray.map((val, index) => {\n                            return (\n                                <BlogCard key={index} data={val} fun={setBlog} />\n                            );\n                        })}\n\n                    </div>\n\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default Blog","/root/Techdome-frontend/src/reducer/blogReducer.js",["110","111"],[],"import { BLOG_REQUEST, BLOG_SUCCESS, ADD_NEW_BLOG, DEL_BLOG, UPDATE_NEW_BLOG } from \"../constants/blogConstants\";\n\nconst blogReducer = (state = { blogs: null }, action) => {\n    switch (action.type) {\n\n        case BLOG_REQUEST:\n            return {\n                ...state,\n                isloading: true,\n            }\n\n        case BLOG_SUCCESS:\n            return {\n                ...state,\n                isloading: false,\n                blogs: action.payload\n            }\n\n        case ADD_NEW_BLOG:\n            return {\n                ...state,\n                blogs: [...state.blogs, action.payload],\n                isloading: false,\n            }\n\n        case DEL_BLOG:\n            const delArray = state.blogs.filter((obj) => {\n                return obj._id != action.payload;\n            });\n            return {\n                ...state,\n                blogs: delArray,\n                isloading: false,\n            }\n\n        case UPDATE_NEW_BLOG:\n            const newBlogArray = state.blogs.map((obj) => {\n                if (obj._id == action.payload._id) {\n                    return action.payload;\n                }\n                return obj;\n            })\n\n            return {\n                ...state,\n                blogs: newBlogArray,\n                isloading: false,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default blogReducer;","/root/Techdome-frontend/src/reducer/userReducer.js",[],[],"/root/Techdome-frontend/src/constants/userConstants.js",[],[],"/root/Techdome-frontend/src/apiConfig/api.js",[],[],"/root/Techdome-frontend/src/actions/blogAction.js",["112"],[],"import { ADD_BLOG, BLOG_REQUEST, BLOG_SUCCESS, ADD_NEW_BLOG, DEL_BLOG, UPDATE_NEW_BLOG } from \"../constants/blogConstants\";\nimport axios from \"axios\";\nimport axiosNew from \"../apiConfig/api\";\n\n\n\nconst uploadData = async (data, dispatch) => {\n    try {\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n        const res = await axiosNew.post(\"/add_blog\", data, config);\n        dispatch({ type: ADD_NEW_BLOG, payload: res.data.blog });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nconst updateData = async (data, dispatch) => {\n    try {\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n        const res = await axiosNew.post(\"/update_blog\", data, config);\n        dispatch({ type: UPDATE_NEW_BLOG, payload: res.data.newBlog });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nexport const addBlog = (blogData) => async (dispatch) => {\n    try {\n        dispatch({ type: BLOG_REQUEST });\n        const data = new FormData();\n        data.append(\"file\", blogData.img);\n        data.append(\"upload_preset\", \"myappintern\");\n        axios.post(\"https://api.cloudinary.com/v1_1/dplwvxqum/image/upload\", data).then(({ data }) => {\n            uploadData({ ...blogData, img: data.url, public_id: data.public_id }, dispatch);\n        }).catch((err) => console.log(err));\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deleteBlog = (blogData) => async (dispatch) => {\n    try {\n        dispatch({ type: DEL_BLOG, payload: blogData._id });\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n        const { data } = await axiosNew.post(\"/delete_blog\", blogData, config);\n        console.log(data);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updateBlog = (blogData) => async (dispatch) => {\n    try {\n        dispatch({ type: BLOG_REQUEST });\n        const config = { headers: { \"Conetnt-Type\": \"application/json\" } };\n\n        if (blogData.imgChange) {\n\n            const del_id = blogData.public_id;\n\n            const data = new FormData();\n            data.append(\"file\", blogData.img);\n            data.append(\"upload_preset\", \"myappintern\");\n            axios.post(\"https://api.cloudinary.com/v1_1/dplwvxqum/image/upload\", data).then(({ data }) => {\n                updateData({ ...blogData, img: data.url, public_id: data.public_id, del_id }, dispatch);\n            }).catch((err) => console.log(err));\n\n        } else {\n            const { data } = await axiosNew.post(\"/update_blog\", blogData, config);\n            console.log(data.newBlog);\n            dispatch({ type: UPDATE_NEW_BLOG, payload: data.newBlog });\n        }\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\nexport const getBlogs = () => async (dispatch) => {\n    try {\n        dispatch({ type: BLOG_REQUEST });\n        const { data } = await axiosNew.get(\"/get_blog\");\n        dispatch({ type: BLOG_SUCCESS, payload: data.blogs });\n    } catch (error) {\n        console.log(error);\n    }\n}","/root/Techdome-frontend/src/components/blogCard/BlogCard.jsx",[],[],"/root/Techdome-frontend/src/components/navbar/NavBar.jsx",["113","114","115","116","117","118","119","120"],[],"import React, { useEffect, useState } from 'react'\nimport \"./navBar.scss\"\nimport { Button } from '@mui/material'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from '../../actions/userAction';\n\nconst NavBar = () => {\n\n    const location = useLocation();\n\n    const [show, setShow] = useState(false);\n\n    const toggle = () => {\n        setShow(!show);\n    }\n\n    ////////////////-------------- redux ---------------//////////////////\n\n    const [state, setState] = useState(false);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"userToken\");\n        if (token) {\n            setState(true);\n        } else {\n            setState(false);\n        }\n    }, []);\n\n    const logout = () => {\n        dispatch(logoutUser(navigate));\n    }\n\n\n    return (\n        <>\n            <div className='nav_bar'>\n                <div className='options_link'>\n                    {state && <div><Link to=\"/form\"> <Button className={`btt ${location.pathname == \"/form\" ? \"active\" : \"\"}`} variant=\"contained\"> Form </Button> </Link> </div>}\n                    <div><Link to=\"/\"> <Button className={`btt ${location.pathname == \"/\" ? \"active\" : \"\"}`} variant=\"contained\"> Blog</Button> </Link> </div>\n                    {!state && <div> <Link to=\"/signup\"> <Button className={`btt ${location.pathname == \"/signup\" ? \"active\" : \"\"}`} variant=\"contained\"> Sign up</Button> </Link> </div>}\n                    {!state && <div> <Link to=\"/login\"> <Button className={`btt ${location.pathname == \"/login\" ? \"active\" : \"\"}`} variant=\"contained\"> Login</Button> </Link></div>}\n                    {state && <div> <Button className=\"btt\" variant=\"contained\" onClick={logout}> Logout</Button> </div>}\n                </div>\n\n                <div className='toggle'>\n                    <Button className='bt' variant='outlined' onClick={toggle}> <MenuIcon /> </Button>\n                </div>\n\n                {show ? <div className='opt'>\n                    {state && <div><Link to=\"/form\"> <Button className={`btt ${location.pathname == \"/form\" ? \"active\" : \"\"}`} variant=\"contained\"> Form </Button> </Link> </div>}\n                    <div><Link to=\"/\"> <Button className={`btt ${location.pathname == \"/\" ? \"active\" : \"\"}`} variant=\"contained\"> Blog</Button> </Link> </div>\n                    {!state && <div> <Link to=\"/signup\"> <Button className={`btt ${location.pathname == \"/signup\" ? \"active\" : \"\"}`} variant=\"contained\"> Sign up</Button> </Link> </div>}\n                    {!state && <div> <Link to=\"/login\"> <Button className={`btt ${location.pathname == \"/login\" ? \"active\" : \"\"}`} variant=\"contained\"> Login</Button> </Link></div>}\n                    {state && <div> <Button className=\"btt\" variant=\"contained\" onClick={logout}> Logout</Button> </div>}\n                </div> : null}\n\n            </div>\n        </>\n    )\n}\n\nexport default NavBar","/root/Techdome-frontend/src/constants/blogConstants.js",[],[],{"ruleId":"121","severity":1,"message":"122","line":17,"column":6,"nodeType":"123","endLine":17,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":25,"nodeType":"127","messageId":"128","endLine":1,"endColumn":38},{"ruleId":"125","severity":1,"message":"129","line":1,"column":40,"nodeType":"127","messageId":"128","endLine":1,"endColumn":52},{"ruleId":"125","severity":1,"message":"130","line":1,"column":68,"nodeType":"127","messageId":"128","endLine":1,"endColumn":77},{"ruleId":"131","severity":1,"message":"132","line":8,"column":24,"nodeType":"133","messageId":"134","endLine":8,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":26,"column":24,"nodeType":"133","messageId":"134","endLine":26,"endColumn":26},{"ruleId":"121","severity":1,"message":"135","line":53,"column":8,"nodeType":"123","endLine":53,"endColumn":25,"suggestions":"136"},{"ruleId":"121","severity":1,"message":"135","line":54,"column":8,"nodeType":"123","endLine":54,"endColumn":25,"suggestions":"137"},{"ruleId":"125","severity":1,"message":"138","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":11},{"ruleId":"121","severity":1,"message":"135","line":28,"column":8,"nodeType":"123","endLine":28,"endColumn":25,"suggestions":"139"},{"ruleId":"121","severity":1,"message":"140","line":44,"column":8,"nodeType":"123","endLine":44,"endColumn":14,"suggestions":"141"},{"ruleId":"121","severity":1,"message":"122","line":69,"column":8,"nodeType":"123","endLine":69,"endColumn":10,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"138","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":11},{"ruleId":"121","severity":1,"message":"122","line":30,"column":8,"nodeType":"123","endLine":30,"endColumn":10,"suggestions":"143"},{"ruleId":"131","severity":1,"message":"144","line":28,"column":32,"nodeType":"133","messageId":"134","endLine":28,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":38,"column":29,"nodeType":"133","messageId":"134","endLine":38,"endColumn":31},{"ruleId":"125","severity":1,"message":"145","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":43,"column":98,"nodeType":"133","messageId":"134","endLine":43,"endColumn":100},{"ruleId":"131","severity":1,"message":"132","line":44,"column":84,"nodeType":"133","messageId":"134","endLine":44,"endColumn":86},{"ruleId":"131","severity":1,"message":"132","line":45,"column":102,"nodeType":"133","messageId":"134","endLine":45,"endColumn":104},{"ruleId":"131","severity":1,"message":"132","line":46,"column":101,"nodeType":"133","messageId":"134","endLine":46,"endColumn":103},{"ruleId":"131","severity":1,"message":"132","line":55,"column":98,"nodeType":"133","messageId":"134","endLine":55,"endColumn":100},{"ruleId":"131","severity":1,"message":"132","line":56,"column":84,"nodeType":"133","messageId":"134","endLine":56,"endColumn":86},{"ruleId":"131","severity":1,"message":"132","line":57,"column":102,"nodeType":"133","messageId":"134","endLine":57,"endColumn":104},{"ruleId":"131","severity":1,"message":"132","line":58,"column":101,"nodeType":"133","messageId":"134","endLine":58,"endColumn":103},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["146"],"no-unused-vars","'LOGIN_REQUEST' is defined but never used.","Identifier","unusedVar","'LOAD_REQUEST' is defined but never used.","'LOAD_FAIL' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["147"],["148"],"'img' is defined but never used.",["149"],"React Hook useEffect has a missing dependency: 'blog'. Either include it or remove the dependency array. You can also do a functional update 'setBlog(b => ...)' if you only need 'blog' in the 'setBlog' call.",["150"],["151"],["152"],"Expected '!==' and instead saw '!='.","'ADD_BLOG' is defined but never used.",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"155","fix":"158"},{"desc":"159","fix":"160"},{"desc":"153","fix":"161"},{"desc":"153","fix":"162"},"Update the dependencies array to be: [dispatch]",{"range":"163","text":"164"},"Update the dependencies array to be: [isAuthenticated, navigate]",{"range":"165","text":"166"},{"range":"167","text":"166"},{"range":"168","text":"166"},"Update the dependencies array to be: [blog, user]",{"range":"169","text":"170"},{"range":"171","text":"164"},{"range":"172","text":"164"},[464,466],"[dispatch]",[1558,1575],"[isAuthenticated, navigate]",[1614,1631],[911,928],[1254,1260],"[blog, user]",[1963,1965],[891,893]]